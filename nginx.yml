# Install nginx for serving kofa.
# Run like this:
#
#    $ ansible-playbook -i 192.168.33.33, -u vagrant \
#            --private-key=.vagrant/machines/trusty/virtualbox/private_key nginx.yml
#
# This setup expects a running kofa portal on port 8080:
#
#    $ vagrant ssh trusty
#    (vagrant) $ cd waeup.kofa-x.y
#    (vagrant) $ ./bin/kofactl start
#
# We also require a `University` instance called `app` already created:
#
#    1) Open 192.168.33.33:8080 in your browser
#    2) Login (grok/grok)
#    3) Create a University instance.
#
---
- hosts: all
  become: no
  vars:
      kofa_hostname: kofa.sample.org

  handlers:
  - name: reload nginx
    service:
        name: nginx
        state: reloaded

  tasks:
  - name: Update cache if not done in last 24 hours.
    apt: update_cache=yes cache_valid_time=86400
    become: yes

  - name: Aptitude safe-upgrade
    apt: upgrade=safe
    become: yes

  - name: Install ningx
    become: yes
    package:
        name: 'nginx'
        state: present

  - name: Create SSL dir for nginx
    become: yes
    file:
        path: /etc/nginx/ssl/
        state: directory
        mode: 0755

  - name: Create self-signed SSL cert
    become: yes
    command: openssl req -new -nodes -x509 -subj "/C=DE/ST=Lower-Saxony/L=LÃ¼chow/O=IT/CN={{ kofa_hostname }}" -days 3650 -keyout /etc/nginx/ssl/server.key -out /etc/nginx/ssl/server.pem -extensions v3_ca
    args:
        creates: /etc/nginx/server.crt
    notify: reload nginx

  - name: Create nginx entry for kofa
    become: yes
    copy:
        src: "kofa-nginx.conf"
        dest: "/etc/nginx/sites-available/kofa.conf"
        owner: root
        group: root
        mode: 0644
    notify: reload nginx

  - name: Remove default nginx config
    become: yes
    file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent

  - name: Create symlink to nginx kofa config
    become: yes
    file:
        src: "/etc/nginx/sites-available/kofa.conf"
        dest: "/etc/nginx/sites-enabled/kofa.conf"
        state: link
    notify: reload nginx
